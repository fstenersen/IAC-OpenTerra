# This is a basic workflow to help validate your Terraform configuration

name: Validate Infrastructure

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      - 'dev'
      - 'stage'
      - 'prod'
      - 'main'
    paths:
      - 'OpenTerraAS/infra/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "validate"
  terraform:
    name: 'Validate'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./OpenTerraAS/infra
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs terraform format to ensure nicely formated code
      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        working-directory: ${{ env.WORKING_DIR }}
  
      # Commit and push the changes if any
      - name: Commit and push if needed
        run: |
          git diff
          git config --global user.name 'OpenTerra GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git add -A
          git commit -m "Automatically formatted Terraform code" || echo "No changes to commit"
          git push
        working-directory: ${{ env.WORKING_DIR }}

      # Runs a single command using the runners shell
      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}          

      - name: Terraform validate
        id: validate
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}
