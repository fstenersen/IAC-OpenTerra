name: Deploy infrastructure for dev and stage

# Will automagicaly deploy dev and stage if changes are pushed to the respective git branches
on:
  push:
    branches:
      - 'dev'
      - 'stage'
    paths:
      - 'OpenTerraAS/infra/**'
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: 'deploy infrastructure'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      WORKING_DIR: ./OpenTerraAS/infra/
      
    steps:
      - uses: actions/checkout@v4

      # Initialize Terraform
      - name: Terraform init
        id: init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      # Determine workspace based on the branch name
      - name: Set Terraform workspace
        run: |
          WORKSPACE="default"
          if [ "${{ github.ref }}" == "refs/heads/stage" ]; then
            WORKSPACE="stage"
          elif [ "${{ github.ref }}" == "refs/heads/dev" ]; then
            WORKSPACE="dev"
          fi
          terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
        working-directory: ${{ env.WORKING_DIR }}

      # Generate a plan for Terraform changes
      - name: Terraform plan
        id: plan
        run: terraform plan
        working-directory: ${{ env.WORKING_DIR }}
      
      # Apply Terraform changes
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: ${{ env.WORKING_DIR }}
