# Workflow Name: Terraform Linter
name: Lint terraform with tflint

# This workflow is triggered after the "Terraform Validate" workflow completes or when manually triggered.
on:
  workflow_call:
    inputs:
      WORKSPACE:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_CLIENT_SECRET:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true

# Environment variables used throughout the job.
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  WORKING_DIR: ./OpenTerraAS/infra/

jobs:
  tflint:
    # Job Name: tflint
    # Description: This job lints the Terraform code.
    name: 'tflint'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository's source code.
    - name: Checkout source code
      uses: actions/checkout@v2

    # Cache the TFLint plugins directory to speed up subsequent runs.
    - name: Cache plugin dir
      uses: actions/cache@v2
      with:
        path: ~/.tflint.d/plugins
        key: ubuntu-tflint-${{ hashFiles('.tflint.hcl') }}

    # Set up the specific version of TFLint.
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v3
      with:
        tflint_version: v0.44.1

    # Display the version of TFLint being used.
    - name: Show version
      run: tflint --version

    # Initialize TFLint. This step fetches necessary plugins based on the configuration.
    - name: Init TFLint
      run: tflint --init
      env:
        # Using a GitHub token to avoid rate-limiting when fetching plugins.
        GITHUB_TOKEN: ${{ github.token }}

    # Run TFLint on the Terraform code with a compact format for the output.
    - name: Run TFLint
      run: tflint -f compact
      working-directory: ${{ env.WORKING_DIR }}
